1. Get the application URL by running these commands:
{{- if .Values.random.ingress.enabled }}
{{- range $host := .Values.random.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.random.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.random.service.type }}
  export NODE1_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "random.random.fullname" . }})
  export NODE1_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE1_IP:$NODE1_PORT
{{- else if contains "LoadBalancer" .Values.random.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch its status by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "random.random.fullname" . }}'
  export SERVICE1_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "random.random.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE1_IP:{{ .Values.random.service.port }}
{{- else if contains "ClusterIP" .Values.random.service.type }}
  export POD1_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "random.random.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER1_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD1_NAME 8080:$CONTAINER1_PORT
{{- end }}

{{- if .Values.user.ingress.enabled }}
{{- range $host := .Values.user.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.user.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.user.service.type }}
  export NODE2_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "random.user.fullname" . }})
  export NODE2_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE2_IP:$NODE2_PORT
{{- else if contains "LoadBalancer" .Values.user.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch its status by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "random.user.fullname" . }}'
  export SERVICE2_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "random.user.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE2_IP:{{ .Values.user.service.port }}
{{- else if contains "ClusterIP" .Values.user.service.type }}
  export POD2_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "random.user.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER2_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8081 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD2_NAME 8081:$CONTAINER2_PORT
{{- end }}
